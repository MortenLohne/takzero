lcghash_low_beta = (
    "lcghash $\\beta = 0.1$",
    "tab:orange",
    [
        [
            (0, 0, -726, 16),
            (0, 100000, 8, 7),
            (0, 200000, 37, 7),
            (0, 300000, -81, 8),
            (0, 400000, 53, 7),
            (0, 500000, 83, 8),
            (0, 600000, 86, 7),
            (0, 700000, -170, 7),
            (0, 800000, 100, 7),
            (0, 900000, 102, 7),
            (0, 1000000, 103, 7),
        ],
        [
            (2, 0, -710, 19),
            (2, 100000, 21, 7),
            (2, 200000, 59, 7),
            (2, 300000, 78, 7),
            (2, 400000, 90, 7),
            (2, 500000, 96, 7),
            (2, 600000, 96, 7),
            (2, 700000, 108, 7),
            (2, 800000, 105, 7),
            (2, 900000, 108, 8),
            (2, 1000000, 111, 7),
        ],
        [
            (3, 0, -716, 20),
            (3, 100000, 27, 6),
            (3, 200000, 52, 7),
            (3, 300000, 79, 6),
            (3, 400000, 88, 7),
            (3, 500000, 98, 8),
            (3, 600000, 100, 7),
            (3, 700000, 96, 6),
            (3, 800000, 106, 8),
            (3, 900000, 109, 7),
            (3, 1000000, (103 + 111) / 2, 7),
        ],
    ],
)

lcghash_mid_beta = (
    "lcghash $\\beta = 0.5$",
    "tab:red",
    [
        [
            (0, 0, -854, 23),
            (0, 100000, 22, 7),
            (0, 200000, 49, 7),
            (0, 300000, 56, 7),
            (0, 400000, -52, 7),
            (0, 500000, 62, 7),
            (0, 600000, 74, 7),
            (0, 700000, 73, 8),
            (0, 800000, 82, 6),
            (0, 900000, 78, 7),
            (0, 1000000, 35, 7),
        ],
    ],
)

simhash_low_beta = (
    "simhash $\\beta = 0.1$",
    "tab:blue",
    [
        [
            (0, 0, -699, 20),
            (0, 100000, -150, 7),
            (0, 200000, 31, 7),
            (0, 300000, 65, 7),
            (0, 400000, 82, 7),
            (0, 500000, 87, 7),
            (0, 600000, 98, 7),
            (0, 700000, 101, 7),
            (0, 800000, 105, 7),
            (0, 900000, 105, 7),
            (0, 1000000, 110, 8),
        ],
        [
            (1, 0, -745, 20),
            (1, 100000, 30, 7),
            (1, 200000, 61, 6),
            (1, 300000, 80, 6),
            (1, 400000, 80, 7),
            (1, 500000, 96, 6),
            (1, 600000, 98, 7),
            (1, 700000, 105, 7),
            (1, 800000, 108, 7),
            (1, 900000, 113, 7),
            (1, 1000000, 114, 8),
        ],
    ],
)

simhash_mid_beta = (
    "simhash $\\beta = 0.5$",
    "tab:purple",
    [
        [
            (1, 0, -773, 17),
            (1, 100000, 23, 7),
            (1, 200000, 54, 7),
            (1, 300000, 74, 7),
            (1, 400000, 83, 7),
            (1, 500000, 84, 7),
            (1, 600000, 91, 7),
            (1, 700000, 96, 7),
            (1, 800000, 97, 7),
            (1, 900000, 105, 7),
            (1, 1000000, 97, 7),
        ],
        [
            (2, 0, -697, 19),
            (2, 100000, 15, 7),
            (2, 200000, 51, 7),
            (2, 300000, 66, 8),
            (2, 400000, 78, 7),
            (2, 500000, 86, 7),
            (2, 600000, 96, 7),
            (2, 700000, 102, 6),
            (2, 800000, 104, 8),
            (2, 900000, 110, 7),
            (2, 1000000, 105, 8),
        ],
    ],
)


undirected = (
    "undirected",
    "tab:green",
    [
        [
            (0, 0, -684, 22),
            (0, 100000, 30, 7),
            (0, 200000, 60, 8),
            (0, 300000, 79, 7),
            (0, 400000, 91, 7),
            (0, 500000, 100, 6),
            (0, 600000, -5, 7),
            (0, 700000, 101, 6),
            (0, 800000, 107, 7),
            (0, 900000, 114, 8),
            (0, 1000000, 111, 7),
        ],
        [
            (1, 0, -761, 23),
            (1, 100000, 31, 7),
            (1, 200000, 60, 8),
            (1, 300000, 76, 8),
            (1, 400000, 91, 7),
            (1, 500000, 99, 8),
            (1, 600000, 103, 7),
            (1, 700000, 105, 8),
            (1, 800000, 107, 7),
            (1, 900000, 112, 8),
            (1, 1000000, 115, 7),
        ],
    ],
)

runs = [
    undirected,
    simhash_low_beta,
    simhash_mid_beta,
    lcghash_low_beta,
    lcghash_mid_beta,
]

import numpy as np
import matplotlib.pyplot as plt
import matplotlib

matplotlib.rcParams.update({'font.size': 16})
matplotlib.rcParams.update({'figure.figsize': (8, 6)})

# for name, color, seeds in runs:
#     for seed in seeds:
#         plt.plot(
#             [x[1] for x in seed],
#             [x[2] for x in seed],
#             label=name,
#             color=color,
#             linewidth=2,
#         )
#         plt.fill_between(
#             [x[1] for x in seed],
#             [x[2] - x[3] for x in seed],
#             [x[2] + x[3] for x in seed],
#             color=color,
#             alpha=0.3,
#         )

for name, color, seeds in runs:
    points = [
        (
            np.mean([x[1] for x in xs]),  # pos
            np.mean([x[2] for x in xs]),  # mean
            np.std([x[2] for x in xs]),  # std
        )
        for xs in zip(*seeds)
    ]
    x = np.array([x for x, y, z in points])
    y = np.array([y for x, y, z in points])
    std = np.array([z for x, y, z in points])
    plt.plot(x, y, label=name, color=color, linewidth=2)
    plt.fill_between(x, y - std, y + std, color=color, alpha=0.3)


plt.grid()
plt.legend()
# plt.title("Replay Buffer Uniqueness")
plt.xlabel("Training steps")
plt.ylabel("Bayes Elo")
plt.savefig("elo.png", bbox_inches="tight", dpi=160)
